#include <stdio.h>
#include "stm32l4xx.h"


int readPin(){
	int res = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_5);
	//printf("%d\n\r", res);
	return res;
}


int detectSeq(){
	printf("\n\rStarting wait...\n\r");
	int state = 1;

	while (state==1){
		state = readPin();
	}

	printf("End of wait\n\r");

	for (int i = 0; i<15; i++){
		HAL_Delay(1);
		state = readPin();
		printf("State after 9ms = %d\n\r", state);
	}
	if (state==1){
		return 1;
	}
	return 0;



	/*for (int i = 0; i<730000; i++){
		HAL_Delay(9)
		int value = readPin();
		//printf("Read value : %d\n\r", value);
		if (value!=state){
			return 0;
		}
	}
	return 1;*/
}

uint32_t last_capture = 0;

void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim) {
    if (htim->Instance == TIM2 && htim->Channel == HAL_TIM_ACTIVE_CHANNEL_1) {
        uint32_t capture_value = HAL_TIM_ReadCapturedValue(htim, TIM_CHANNEL_1);

        // Calculate pulse duration
        uint32_t pulse_duration = (capture_value - last_capture) & 0xFFFF; // Handle overflow
        last_capture = capture_value;
        printf("%d \n\r", pulse_duration);

        // Process pulse duration (e.g., decode IR signal)
    }
}
